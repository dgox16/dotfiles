-- return {
--
--     -- UI
--     { "nvim-tree/nvim-web-devicons", lazy = true },
--
--     -- {
--     --     "catppuccin/nvim",
--     --     lazy = false,
--     --     priority = 1000,
--     --     name = "catppuccin",
--     --     config = function()
--     --         require("configs.ui.catppuccin")
--     --     end,
--     -- },
--
--     {
--         "folke/noice.nvim",
--         event = "VeryLazy",
--         dependencies = {
--             { "MunifTanjim/nui.nvim", lazy = true },
--             {
--                 "rcarriga/nvim-notify",
--                 lazy = true,
--                 event = "VeryLazy",
--                 keys = {
--                     {
--                         "<leader>un",
--                         function()
--                             require("notify").dismiss({ silent = true, pending = true })
--                         end,
--                         desc = "Delete all Notifications",
--                     },
--                 },
--                 opts = {
--                     timeout = 3000,
--                     max_height = function()
--                         return math.floor(vim.o.lines * 0.75)
--                     end,
--                     max_width = function()
--                         return math.floor(vim.o.columns * 0.75)
--                     end,
--                 },
--             },
--         },
--         config = function()
--             require("configs.ui.noice")
--         end,
--     },
--
--     {
--         "hoob3rt/lualine.nvim",
--         event = { "BufReadPost", "BufNewFile" },
--         config = function()
--             require("configs.ui.lualine")
--         end,
--     },
--
--     {
--         "goolord/alpha-nvim",
--         event = "BufWinEnter",
--         config = function()
--             require("configs.ui.alpha")
--         end,
--     },
--
--     {
--         "nvim-neo-tree/neo-tree.nvim",
--         cmd = "NeoTreeFocusToggle",
--         config = function()
--             require("configs.ui.neotree")
--         end,
--     },
--
--     {
--         "lewis6991/gitsigns.nvim",
--         event = "BufReadPre",
--         config = function()
--             require("configs.ui.gitsigns")
--         end,
--     },
--
--     {
--         "lukas-reineke/indent-blankline.nvim",
--         event = "BufReadPost",
--         opts = {
--             filetype_exclude = { "help", "alpha", "dashboard", "neo-tree", "Trouble", "lazy" },
--             show_trailing_blankline_indent = false,
--             show_current_context = true,
--         },
--     },
--
--     {
--         "akinsho/bufferline.nvim",
--         event = { "BufReadPost", "BufNewFile" },
--         version = "*",
--         config = function()
--             require("configs.ui.bufferline")
--         end,
--     },
--
--     {
--         "NvChad/nvim-colorizer.lua",
--         event = "BufReadPost",
--         config = function()
--             require("configs.ui.colorizer")
--         end,
--     },
--
--     {
--         "stevearc/dressing.nvim",
--         lazy = true,
--         init = function()
--             ---@diagnostic disable-next-line: duplicate-set-field
--             vim.ui.select = function(...)
--                 require("lazy").load({ plugins = { "dressing.nvim" } })
--                 return vim.ui.select(...)
--             end
--             ---@diagnostic disable-next-line: duplicate-set-field
--             vim.ui.input = function(...)
--                 require("lazy").load({ plugins = { "dressing.nvim" } })
--                 return vim.ui.input(...)
--             end
--         end,
--     },
--
--     -- Editor
--     {
--         "numToStr/Comment.nvim",
--         keys = { "gc", { "gc", mode = "x" } },
--         config = function()
--             require("configs.editor.comment")
--         end,
--     },
--
--     {
--         "RRethy/vim-illuminate",
--         event = "BufReadPost",
--         opts = { delay = 200 },
--         config = function(_, opts)
--             require("illuminate").configure(opts)
--         end,
--     },
--
--     {
--         "nvim-treesitter/nvim-treesitter",
--         event = "BufReadPost",
--         keys = {
--             { "<c-space>", desc = "Increment selection" },
--             { "<bs>", desc = "Schrink selection", mode = "x" },
--         },
--         dependencies = {
--
--             "p00f/nvim-ts-rainbow",
--             "windwp/nvim-ts-autotag",
--         },
--         config = function()
--             require("configs.editor.treesitter")
--         end,
--         build = ":TSUpdate",
--     },
--
--     {
--         "kylechui/nvim-surround",
--         version = "*",
--         keys = { "cs", "ys", "ds" },
--         config = function()
--             require("configs.editor.surround")
--         end,
--     },
--
--     {
--         "phaazon/hop.nvim",
--         cmd = "HopWord",
--         config = function()
--             require("configs.editor.hop")
--         end,
--     },
--
--     {
--         "max397574/better-escape.nvim",
--         event = "InsertEnter",
--         config = function()
--             require("configs.editor.better_escape")
--         end,
--     },
--
--     {
--         "akinsho/toggleterm.nvim",
--         cmd = { "ToggleTerm" },
--         version = "v2.*",
--         config = function()
--             require("configs.editor.toggleterm")
--         end,
--     },
--
--     -- Completion
--     {
--         "neovim/nvim-lspconfig",
--         event = "BufReadPre",
--         dependencies = {
--             "hrsh7th/cmp-nvim-lsp",
--             "barreiroleo/ltex-extra.nvim",
--         },
--         config = function()
--             require("configs.completion.lsp")
--         end,
--     },
--
--     {
--         "williamboman/mason.nvim",
--         config = function()
--             require("configs.completion.mason")
--         end,
--     },
--
--     {
--         "gbprod/yanky.nvim",
--         enabled = true,
--         event = "BufReadPost",
--         config = function()
--             require("yanky").setup({
--                 highlight = {
--                     timer = 150,
--                 },
--             })
--
--             vim.keymap.set({ "n", "x" }, "y", "<Plug>(YankyYank)")
--
--             vim.keymap.set({ "n", "x" }, "p", "<Plug>(YankyPutAfter)")
--             vim.keymap.set({ "n", "x" }, "P", "<Plug>(YankyPutBefore)")
--             vim.keymap.set({ "n", "x" }, "gp", "<Plug>(YankyGPutAfter)")
--             vim.keymap.set({ "n", "x" }, "gP", "<Plug>(YankyGPutBefore)")
--
--             vim.keymap.set("n", "<c-n>", "<Plug>(YankyCycleForward)")
--             vim.keymap.set("n", "<c-p>", "<Plug>(YankyCycleBackward)")
--
--             vim.keymap.set("n", "]p", "<Plug>(YankyPutIndentAfterLinewise)")
--             vim.keymap.set("n", "[p", "<Plug>(YankyPutIndentBeforeLinewise)")
--             vim.keymap.set("n", "]P", "<Plug>(YankyPutIndentAfterLinewise)")
--             vim.keymap.set("n", "[P", "<Plug>(YankyPutIndentBeforeLinewise)")
--
--             vim.keymap.set("n", ">p", "<Plug>(YankyPutIndentAfterShiftRight)")
--             vim.keymap.set("n", "<p", "<Plug>(YankyPutIndentAfterShiftLeft)")
--             vim.keymap.set("n", ">P", "<Plug>(YankyPutIndentBeforeShiftRight)")
--             vim.keymap.set("n", "<P", "<Plug>(YankyPutIndentBeforeShiftLeft)")
--
--             vim.keymap.set("n", "=p", "<Plug>(YankyPutAfterFilter)")
--             vim.keymap.set("n", "=P", "<Plug>(YankyPutBeforeFilter)")
--
--             vim.keymap.set("n", "<leader>P", function()
--                 require("telescope").extensions.yank_history.yank_history({})
--             end, { desc = "Paste from Yanky" })
--         end,
--     },
--
--     {
--         "hrsh7th/nvim-cmp",
--         event = "InsertEnter",
--         config = function()
--             require("configs.completion.cmp")
--         end,
--         dependencies = {
--             "onsails/lspkind.nvim",
--             "saadparwaiz1/cmp_luasnip",
--             "hrsh7th/cmp-nvim-lua",
--             "hrsh7th/cmp-path",
--             "hrsh7th/cmp-buffer",
--         },
--     },
--
--     {
--         "windwp/nvim-autopairs",
--         event = "InsertEnter",
--         config = function()
--             require("configs.completion.autopairs")
--         end,
--     },
--
--     {
--         "L3MON4D3/LuaSnip",
--         event = "InsertEnter",
--         dependencies = {
--             "rafamadriz/friendly-snippets",
--         },
--         config = function()
--             require("configs.completion.luasnip")
--         end,
--     },
--
--     {
--         "jose-elias-alvarez/null-ls.nvim",
--         event = "BufReadPre",
--         config = function()
--             require("configs.completion.null_ls")
--         end,
--     },
--
--     -- Tools
--     {
--         "nvim-lua/plenary.nvim",
--         event = "VeryLazy",
--     },
--
--     {
--         "nvim-telescope/telescope.nvim",
--         cmd = "Telescope",
--         dependencies = {
--             { "nvim-telescope/telescope-fzf-native.nvim", build = "make" },
--         },
--         config = function()
--             require("configs.tools.telescope")
--         end,
--     },
--
--     {
--         "folke/trouble.nvim",
--         lazy = true,
--         cmd = { "TroubleToggle" },
--         config = function()
--             require("configs.tools.trouble")
--         end,
--     },
--
--     {
--         "NTBBloodbath/rest.nvim",
--         ft = "http",
--         config = function()
--             require("configs.tools.rest")
--         end,
--     },
--
--     {
--         "lambdalisue/suda.vim",
--         cmd = { "SudaRead", "SudaWrite" },
--     },
--
--     {
--         "iamcco/markdown-preview.nvim",
--         build = function()
--             vim.fn["mkdp#util#install"]()
--         end,
--         config = function()
--             require("configs.tools.md_preview")
--         end,
--         ft = { "markdown" },
--     },
--
--     {
--         "adalessa/markdown-preview.nvim",
--         name = "mdpreview",
--         config = true,
--         ft = "markdown",
--     },
-- }
